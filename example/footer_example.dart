// SPDX-FileCopyrightText: 2025 Karim "nogipx" Mamatkazin <nogipx@gmail.com>
//
// SPDX-License-Identifier: LGPL-3.0-or-later

import 'dart:convert';
import 'dart:typed_data';
import 'package:paseto_dart/paseto_dart.dart';

/// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ—É—Ç–µ—Ä–∞ –≤ PASETO —Ç–æ–∫–µ–Ω–∞—Ö
///
/// –§—É—Ç–µ—Ä—ã –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö, —Ç–∞–∫–∏—Ö –∫–∞–∫:
/// - –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–ª—é—á–∞ (kid)
/// - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
/// - –õ—é–±—ã–µ –¥—Ä—É–≥–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Ç—Ä–µ–±—É—é—Ç —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –ø–æ–¥–ø–∏—Å–∏
Future<void> main() async {
  await _localTokenWithFooter();
  print('\n=== === === === === === === === === === === === ===\n');
  await _publicTokenWithFooter();
}

/// –ü—Ä–∏–º–µ—Ä —Å v4.local —Ç–æ–∫–µ–Ω–æ–º –∏ —Ñ—É—Ç–µ—Ä–æ–º
Future<void> _localTokenWithFooter() async {
  print('üîê –ü–†–ò–ú–ï–†: v4.local —Ç–æ–∫–µ–Ω —Å —Ñ—É—Ç–µ—Ä–æ–º');

  // –®–∞–≥ 1: –°–æ–∑–¥–∞–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á
  print('üîë –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞...');
  final secretKey = SecretKey(Uint8List.fromList(List.generate(32, (i) => i)));

  // –®–∞–≥ 2: –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
  final sensitiveData = {
    'userId': 12345,
    'email': 'user@example.com',
    'exp': DateTime.now().add(Duration(hours: 1)).millisecondsSinceEpoch ~/ 1000
  };
  print('üì¶ –î–∞–Ω–Ω—ã–µ –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è: $sensitiveData');

  // –®–∞–≥ 3: –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ—É—Ç–µ—Ä–∞ (–º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ)
  final footerData = {
    'kid': 'key-1', // –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–ª—é—á–∞
    'app': 'example-app', // –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    'issued_at': DateTime.now().toIso8601String()
  };
  print('üè∑Ô∏è –î–∞–Ω–Ω—ã–µ —Ñ—É—Ç–µ—Ä–∞: $footerData');

  // –®–∞–≥ 4: –°–æ–∑–¥–∞–µ–º –ø–∞–∫–µ—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∏ —Ñ—É—Ç–µ—Ä–æ–º
  final package = Package(
    content: utf8.encode(jsonEncode(sensitiveData)),
    footer: utf8.encode(jsonEncode(footerData)),
  );

  // –®–∞–≥ 5: –®–∏—Ñ—Ä—É–µ–º —Å –ø–æ–º–æ—â—å—é LocalV4
  print('üîí –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...');
  final encryptedPayload = await LocalV4.encrypt(
    package,
    secretKey: secretKey,
  );

  // –®–∞–≥ 6: –°–æ–∑–¥–∞–µ–º —Ç–æ–∫–µ–Ω —Å —Ñ—É—Ç–µ—Ä–æ–º
  final token = Token(
    header: LocalV4.header,
    payload: encryptedPayload,
    footer: utf8.encode(jsonEncode(footerData)),
  );

  // –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏
  final tokenString = token.toTokenString;
  print('üîí –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω —Å —Ñ—É—Ç–µ—Ä–æ–º: $tokenString');

  // –®–∞–≥ 7: –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω (–æ–±—ã—á–Ω–æ –Ω–∞ –¥—Ä—É–≥–æ–π —Å—Ç–æ—Ä–æ–Ω–µ)
  print('\nüîì –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞...');

  // –ò–∑ —Å—Ç—Ä–æ–∫–∏ –ø–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —Ç–æ–∫–µ–Ω–∞
  final receivedToken = await Token.fromString(tokenString);
  print('‚úÖ –¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω');

  // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ—á–∏—Ç–∞–µ–º —Ñ—É—Ç–µ—Ä (–æ–Ω –Ω–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω)
  if (receivedToken.footer != null) {
    final parsedFooter = jsonDecode(utf8.decode(receivedToken.footer!));
    print('üè∑Ô∏è –ü—Ä–æ—á–∏—Ç–∞–Ω —Ñ—É—Ç–µ—Ä: $parsedFooter');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–ª—é—á–∞
    final keyId = parsedFooter['kid'];
    print('üîë –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–ª—é—á–∞: $keyId');

    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω—É–∂–Ω—ã–π –∫–ª—é—á –ø–æ –µ–≥–æ ID
    // final actualKey = getKeyById(keyId);
  } else {
    print('‚ùå –§—É—Ç–µ—Ä –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
    return;
  }

  // –î–µ—à–∏—Ñ—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
  final decrypted = await receivedToken.decryptLocalMessage(
    secretKey: secretKey,
  );

  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–π—Ç–æ–≤ –≤ JSON
  try {
    final decodedPayload = jsonDecode(utf8.decode(decrypted.package.content));
    print('üîì –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: $decodedPayload');
  } catch (e) {
    print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: $e');
    print('üîç –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ –±–∞–π—Ç—ã: ${_bytesToHex(decrypted.package.content)}');
    print('üîç –î–ª–∏–Ω–∞ –¥–∞–Ω–Ω—ã—Ö: ${decrypted.package.content.length}');
  }

  print('‚úÖ –ü—Ä–∏–º–µ—Ä v4.local —Å —Ñ—É—Ç–µ—Ä–æ–º —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω!');
}

/// –ü—Ä–∏–º–µ—Ä —Å v4.public —Ç–æ–∫–µ–Ω–æ–º –∏ —Ñ—É—Ç–µ—Ä–æ–º
Future<void> _publicTokenWithFooter() async {
  print('üîè –ü–†–ò–ú–ï–†: v4.public —Ç–æ–∫–µ–Ω —Å —Ñ—É—Ç–µ—Ä–æ–º');

  // –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª—é—á–µ–≤–æ–π –ø–∞—Ä—ã Ed25519
  print('üîë –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–≤–æ–π –ø–∞—Ä—ã Ed25519...');
  final ed25519 = Ed25519();
  final keyPair = await ed25519.newKeyPair();
  final publicKey = await keyPair.extractPublicKey();

  // –®–∞–≥ 2: –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–ø–∏—Å–∏
  final userData = {
    'sub': 'user_12345',
    'name': '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤',
    'exp': DateTime.now().add(Duration(hours: 1)).millisecondsSinceEpoch ~/ 1000
  };
  print('üì¶ –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–ø–∏—Å–∏: $userData');

  // –®–∞–≥ 3: –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ—É—Ç–µ—Ä–∞ (–º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ)
  final footerData = {
    'kid': 'public-key-1', // –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–ª—é—á–∞
    'purpose': 'authentication', // –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
    'issued_at': DateTime.now().toIso8601String()
  };
  print('üè∑Ô∏è –î–∞–Ω–Ω—ã–µ —Ñ—É—Ç–µ—Ä–∞: $footerData');

  // –®–∞–≥ 4: –°–æ–∑–¥–∞–µ–º –ø–∞–∫–µ—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∏ —Ñ—É—Ç–µ—Ä–æ–º
  final package = Package(
    content: utf8.encode(jsonEncode(userData)),
    footer: utf8.encode(jsonEncode(footerData)),
  );

  // –®–∞–≥ 5: –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é PublicV4
  print('üîè –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ...');
  final signedPayload = await PublicV4.sign(
    package,
    keyPair: keyPair,
  );

  // –®–∞–≥ 6: –°–æ–∑–¥–∞–µ–º —Ç–æ–∫–µ–Ω —Å —Ñ—É—Ç–µ—Ä–æ–º
  final token = Token(
    header: PublicV4.header,
    payload: signedPayload,
    footer: utf8.encode(jsonEncode(footerData)),
  );

  // –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏
  final tokenString = token.toTokenString;
  print('üîè –ü–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω —Å —Ñ—É—Ç–µ—Ä–æ–º: $tokenString');

  // –®–∞–≥ 7: –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å—å –∏ —á–∏—Ç–∞–µ–º —Ñ—É—Ç–µ—Ä
  print('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞...');

  // –ò–∑ —Å—Ç—Ä–æ–∫–∏ –ø–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —Ç–æ–∫–µ–Ω–∞
  final receivedToken = await Token.fromString(tokenString);
  print('‚úÖ –¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω');

  // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ—á–∏—Ç–∞–µ–º —Ñ—É—Ç–µ—Ä (–æ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∏)
  if (receivedToken.footer != null) {
    final parsedFooter = jsonDecode(utf8.decode(receivedToken.footer!));
    print('üè∑Ô∏è –ü—Ä–æ—á–∏—Ç–∞–Ω —Ñ—É—Ç–µ—Ä: $parsedFooter');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–ª—é—á–∞
    final keyId = parsedFooter['kid'];
    print('üîë –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–ª—é—á–∞: $keyId');

    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω—É–∂–Ω—ã–π –∫–ª—é—á –ø–æ –µ–≥–æ ID
    // final publicKey = getPublicKeyById(keyId);
  } else {
    print('‚ùå –§—É—Ç–µ—Ä –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
    return;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å—å
  final verified = await receivedToken.verifyPublicMessage(
    publicKey: publicKey,
  );

  // –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å—å –≤–µ—Ä–Ω–∞, –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–æ–∫–µ–Ω–∞
  try {
    final decodedPayload = jsonDecode(utf8.decode(verified.package.content));
    print('‚úÖ –ü–æ–¥–ø–∏—Å—å –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    print('üì¶ –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: $decodedPayload');
  } catch (e) {
    print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: $e');
    print('üîç –ë–∞–π—Ç—ã –¥–∞–Ω–Ω—ã—Ö: ${_bytesToHex(verified.package.content)}');
    print('üîç –î–ª–∏–Ω–∞ –¥–∞–Ω–Ω—ã—Ö: ${verified.package.content.length}');
  }

  print('‚úÖ –ü—Ä–∏–º–µ—Ä v4.public —Å —Ñ—É—Ç–µ—Ä–æ–º —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω!');
}

/// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞–π—Ç–æ–≤ –≤ —à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–µ—Ä–∏—á–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
String _bytesToHex(List<int> bytes) {
  return bytes.map((b) => b.toRadixString(16).padLeft(2, '0')).join('');
}
